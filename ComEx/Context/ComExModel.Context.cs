//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComEx.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_comexEntities : DbContext
    {
        public db_comexEntities()
            : base("name=db_comexEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tcUsuarios> tcUsuarios { get; set; }
        public virtual DbSet<tcMenu> tcMenu { get; set; }
        public virtual DbSet<tcRol> tcRol { get; set; }
        public virtual DbSet<tcRolMenu> tcRolMenu { get; set; }
        public virtual DbSet<tcRolUsuario> tcRolUsuario { get; set; }
        public virtual DbSet<tmRegalias> tmRegalias { get; set; }
        public virtual DbSet<tmLineas> tmLineas { get; set; }
        public virtual DbSet<tmCPDetalle> tmCPDetalle { get; set; }
        public virtual DbSet<tmCPEncabezado> tmCPEncabezado { get; set; }
        public virtual DbSet<tmPlanesCI> tmPlanesCI { get; set; }
        public virtual DbSet<tmCiudades> tmCiudades { get; set; }
        public virtual DbSet<tmDepartamentos> tmDepartamentos { get; set; }
        public virtual DbSet<tmImportadorExportador> tmImportadorExportador { get; set; }
        public virtual DbSet<tmPaises> tmPaises { get; set; }
        public virtual DbSet<tmProveedores> tmProveedores { get; set; }
        public virtual DbSet<tmRegimenes> tmRegimenes { get; set; }
        public virtual DbSet<tmResolucionesProveedor> tmResolucionesProveedor { get; set; }
        public virtual DbSet<tmUnidades> tmUnidades { get; set; }
        public virtual DbSet<tmAdquiridasComprasTipo> tmAdquiridasComprasTipo { get; set; }
        public virtual DbSet<tmCompras> tmCompras { get; set; }
        public virtual DbSet<tmComprasDetalle> tmComprasDetalle { get; set; }
        public virtual DbSet<tmAdquiridas> tmAdquiridas { get; set; }
        public virtual DbSet<tmComprasTipo> tmComprasTipo { get; set; }
        public virtual DbSet<tmInsumos> tmInsumos { get; set; }
        public virtual DbSet<tmMonedas> tmMonedas { get; set; }
        public virtual DbSet<tmPosicionesArancelarias> tmPosicionesArancelarias { get; set; }
        public virtual DbSet<tmRetefuente> tmRetefuente { get; set; }
        public virtual DbSet<tmTituloMineroProveedor> tmTituloMineroProveedor { get; set; }
        public virtual DbSet<vOrdenesCompraCI> vOrdenesCompraCI { get; set; }
        public virtual DbSet<vOrdenesCompraDetalleCI> vOrdenesCompraDetalleCI { get; set; }
        public virtual DbSet<vProveedores> vProveedores { get; set; }
        public virtual DbSet<vResolucionFactActualProveedor> vResolucionFactActualProveedor { get; set; }
        public virtual DbSet<vCpCI> vCpCI { get; set; }
        public virtual DbSet<tcLogOperaciones> tcLogOperaciones { get; set; }
        public virtual DbSet<tmNotasCreditoDetalle> tmNotasCreditoDetalle { get; set; }
        public virtual DbSet<tmNotasCreditoEncabezado> tmNotasCreditoEncabezado { get; set; }
        public virtual DbSet<vXmlCIDiarioDetalle> vXmlCIDiarioDetalle { get; set; }
        public virtual DbSet<vXmlCIDiarioEncabezado> vXmlCIDiarioEncabezado { get; set; }
        public virtual DbSet<tmNotificaciones> tmNotificaciones { get; set; }
        public virtual DbSet<tmCompradores> tmCompradores { get; set; }
        public virtual DbSet<vBorradoresDexCreacion> vBorradoresDexCreacion { get; set; }
        public virtual DbSet<vFormatoOrdenesCompraCI> vFormatoOrdenesCompraCI { get; set; }
        public virtual DbSet<vLotesSinDEX> vLotesSinDEX { get; set; }
        public virtual DbSet<tipoDocumentosArchivosAdjuntos> tipoDocumentosArchivosAdjuntos { get; set; }
        public virtual DbSet<tmDocumentosAdjuntos> tmDocumentosAdjuntos { get; set; }
        public virtual DbSet<vReporteOrdenesCompraCI> vReporteOrdenesCompraCI { get; set; }
        public virtual DbSet<tmpTmvCpDetalleInterface> tmpTmvCpDetalleInterface { get; set; }
        public virtual DbSet<tmpTmvCpEncabezadoInterface> tmpTmvCpEncabezadoInterface { get; set; }
        public virtual DbSet<tmptmvDEXDetalleContinuacionInterface> tmptmvDEXDetalleContinuacionInterface { get; set; }
        public virtual DbSet<tmptmvDEXDetalleInterface> tmptmvDEXDetalleInterface { get; set; }
        public virtual DbSet<tmpTmvDEXEncabezadoInterface> tmpTmvDEXEncabezadoInterface { get; set; }
        public virtual DbSet<tmpTmvDEXEncabezadoSoporteInterface> tmpTmvDEXEncabezadoSoporteInterface { get; set; }
        public virtual DbSet<tmpTmvDEXEncabezadoTransportadorInterface> tmpTmvDEXEncabezadoTransportadorInterface { get; set; }
        public virtual DbSet<tmptmvDEXDetalleCpsInterface> tmptmvDEXDetalleCpsInterface { get; set; }
        public virtual DbSet<vInformeAnualCi> vInformeAnualCi { get; set; }
        public virtual DbSet<vInformeUIAFCompVent> vInformeUIAFCompVent { get; set; }
        public virtual DbSet<vInformeUIAFImpExp> vInformeUIAFImpExp { get; set; }
        public virtual DbSet<tmvDEXEncabezado> tmvDEXEncabezado { get; set; }
        public virtual DbSet<vInventarioCp> vInventarioCp { get; set; }
        public virtual DbSet<vDocumentosAdjuntosDexCIComex> vDocumentosAdjuntosDexCIComex { get; set; }
        public virtual DbSet<tmCuadrosInsumoProducto> tmCuadrosInsumoProducto { get; set; }
        public virtual DbSet<tmvDexCorreciones> tmvDexCorreciones { get; set; }
        public virtual DbSet<tmvDEXDetalle> tmvDEXDetalle { get; set; }
        public virtual DbSet<tmvFacturasExportacionDetalle> tmvFacturasExportacionDetalle { get; set; }
        public virtual DbSet<tmvFacturasExportacionEncabezado> tmvFacturasExportacionEncabezado { get; set; }
        public virtual DbSet<tmvProductosFacturacion> tmvProductosFacturacion { get; set; }
        public virtual DbSet<tmIncoterms> tmIncoterms { get; set; }
        public virtual DbSet<vFacturasExportacion> vFacturasExportacion { get; set; }
        public virtual DbSet<vDEX> vDEX { get; set; }
        public virtual DbSet<vDexDetalleComex> vDexDetalleComex { get; set; }
        public virtual DbSet<tmAduanas> tmAduanas { get; set; }
        public virtual DbSet<tmLugaresEmbarque> tmLugaresEmbarque { get; set; }
        public virtual DbSet<tmTerceros> tmTerceros { get; set; }
        public virtual DbSet<tmTransportes> tmTransportes { get; set; }
        public virtual DbSet<tmvDexPdfCPs> tmvDexPdfCPs { get; set; }
        public virtual DbSet<vFormatoDocEquivalenteCI> vFormatoDocEquivalenteCI { get; set; }
        public virtual DbSet<tcParametros> tcParametros { get; set; }
        public virtual DbSet<tmRemisionDocumentos> tmRemisionDocumentos { get; set; }
        public virtual DbSet<vPdfCpManualDetalle> vPdfCpManualDetalle { get; set; }
        public virtual DbSet<vPdfCpManualEncabezado> vPdfCpManualEncabezado { get; set; }
        public virtual DbSet<tmResolucionesImportadorExportador> tmResolucionesImportadorExportador { get; set; }
        public virtual DbSet<vFormatoDocEquivalenteCINuevo> vFormatoDocEquivalenteCINuevo { get; set; }
        public virtual DbSet<tmTiposDescuentos> tmTiposDescuentos { get; set; }
        public virtual DbSet<tmvFacturasExportacionNotasCredito> tmvFacturasExportacionNotasCredito { get; set; }
    
        public virtual int spInsertarTmpCompras(string varNumLte, Nullable<int> intIdRglia, ObjectParameter errores, ObjectParameter buenos, ObjectParameter totalRegistros, ObjectParameter factorOnza, ObjectParameter retencion, ObjectParameter numBseRglias, ObjectParameter numBseRgliasAG, ObjectParameter numBseRgliasPT, ObjectParameter numFctor, ObjectParameter numTotalBrutos, ObjectParameter numTotalFinos, ObjectParameter numTotalFinosAG, ObjectParameter numTotalFinosPT, ObjectParameter numTotalRegalias)
        {
            var varNumLteParameter = varNumLte != null ?
                new ObjectParameter("varNumLte", varNumLte) :
                new ObjectParameter("varNumLte", typeof(string));
    
            var intIdRgliaParameter = intIdRglia.HasValue ?
                new ObjectParameter("intIdRglia", intIdRglia) :
                new ObjectParameter("intIdRglia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarTmpCompras", varNumLteParameter, intIdRgliaParameter, errores, buenos, totalRegistros, factorOnza, retencion, numBseRglias, numBseRgliasAG, numBseRgliasPT, numFctor, numTotalBrutos, numTotalFinos, numTotalFinosAG, numTotalFinosPT, numTotalRegalias);
        }
    
        public virtual int spValidarNumFacturaInterface(Nullable<int> intIdtmpCompras, string factura, string prefijo, ObjectParameter bitValid, ObjectParameter mensaje)
        {
            var intIdtmpComprasParameter = intIdtmpCompras.HasValue ?
                new ObjectParameter("intIdtmpCompras", intIdtmpCompras) :
                new ObjectParameter("intIdtmpCompras", typeof(int));
    
            var facturaParameter = factura != null ?
                new ObjectParameter("factura", factura) :
                new ObjectParameter("factura", typeof(string));
    
            var prefijoParameter = prefijo != null ?
                new ObjectParameter("prefijo", prefijo) :
                new ObjectParameter("prefijo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidarNumFacturaInterface", intIdtmpComprasParameter, facturaParameter, prefijoParameter, bitValid, mensaje);
        }
    
        public virtual int spInsertarTrasladoCompras(string varLgin)
        {
            var varLginParameter = varLgin != null ?
                new ObjectParameter("varLgin", varLgin) :
                new ObjectParameter("varLgin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarTrasladoCompras", varLginParameter);
        }
    
        public virtual int spAnularCP(Nullable<int> intIdCP, Nullable<bool> bitAnlarCmpras)
        {
            var intIdCPParameter = intIdCP.HasValue ?
                new ObjectParameter("intIdCP", intIdCP) :
                new ObjectParameter("intIdCP", typeof(int));
    
            var bitAnlarCmprasParameter = bitAnlarCmpras.HasValue ?
                new ObjectParameter("bitAnlarCmpras", bitAnlarCmpras) :
                new ObjectParameter("bitAnlarCmpras", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAnularCP", intIdCPParameter, bitAnlarCmprasParameter);
        }
    
        public virtual int spCrearModificacionCP(Nullable<int> intIdCP, ObjectParameter varCdCPOrig, ObjectParameter varCdCPModi)
        {
            var intIdCPParameter = intIdCP.HasValue ?
                new ObjectParameter("intIdCP", intIdCP) :
                new ObjectParameter("intIdCP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearModificacionCP", intIdCPParameter, varCdCPOrig, varCdCPModi);
        }
    
        public virtual int spEliminarCargueAnexpo(Nullable<int> intCnsctvoCrgue)
        {
            var intCnsctvoCrgueParameter = intCnsctvoCrgue.HasValue ?
                new ObjectParameter("intCnsctvoCrgue", intCnsctvoCrgue) :
                new ObjectParameter("intCnsctvoCrgue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEliminarCargueAnexpo", intCnsctvoCrgueParameter);
        }
    
        public virtual ObjectResult<spConsultarNotificaciones_Result> spConsultarNotificaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarNotificaciones_Result>("spConsultarNotificaciones");
        }
    
        public virtual int spCrearBorradorDex(Nullable<int> intIdDEX, string varCdAuxliar, Nullable<int> intIdCmprdor, string varNmLtes)
        {
            var intIdDEXParameter = intIdDEX.HasValue ?
                new ObjectParameter("intIdDEX", intIdDEX) :
                new ObjectParameter("intIdDEX", typeof(int));
    
            var varCdAuxliarParameter = varCdAuxliar != null ?
                new ObjectParameter("varCdAuxliar", varCdAuxliar) :
                new ObjectParameter("varCdAuxliar", typeof(string));
    
            var intIdCmprdorParameter = intIdCmprdor.HasValue ?
                new ObjectParameter("intIdCmprdor", intIdCmprdor) :
                new ObjectParameter("intIdCmprdor", typeof(int));
    
            var varNmLtesParameter = varNmLtes != null ?
                new ObjectParameter("varNmLtes", varNmLtes) :
                new ObjectParameter("varNmLtes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearBorradorDex", intIdDEXParameter, varCdAuxliarParameter, intIdCmprdorParameter, varNmLtesParameter);
        }
    
        public virtual ObjectResult<spCpPdfInterface_Result> spCpPdfInterface()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCpPdfInterface_Result>("spCpPdfInterface");
        }
    
        public virtual int spInsertarTrasladoCPPdfInterface(string varLgin)
        {
            var varLginParameter = varLgin != null ?
                new ObjectParameter("varLgin", varLgin) :
                new ObjectParameter("varLgin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertarTrasladoCPPdfInterface", varLginParameter);
        }
    
        public virtual int spValidacionesCpPdfInterface(ObjectParameter errores, ObjectParameter buenos, ObjectParameter totalDocumentos)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidacionesCpPdfInterface", errores, buenos, totalDocumentos);
        }
    
        public virtual ObjectResult<spCompararTmvDEXEncabezadoVsPdf_Result> spCompararTmvDEXEncabezadoVsPdf()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCompararTmvDEXEncabezadoVsPdf_Result>("spCompararTmvDEXEncabezadoVsPdf");
        }
    
        public virtual int spCompletaTmvDEXEncabezadoVsPdf(string varLgin)
        {
            var varLginParameter = varLgin != null ?
                new ObjectParameter("varLgin", varLgin) :
                new ObjectParameter("varLgin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCompletaTmvDEXEncabezadoVsPdf", varLginParameter);
        }
    
        public virtual int spValidacionesDexPdfInterface(ObjectParameter buenos, ObjectParameter errores)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spValidacionesDexPdfInterface", buenos, errores);
        }
    
        public virtual ObjectResult<spTmpCompras_Result> spTmpCompras()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTmpCompras_Result>("spTmpCompras");
        }
    
        public virtual ObjectResult<spTmRemisionDocumentos_Result> spTmRemisionDocumentos(Nullable<System.DateTime> fecInicio, Nullable<System.DateTime> fecFin)
        {
            var fecInicioParameter = fecInicio.HasValue ?
                new ObjectParameter("fecInicio", fecInicio) :
                new ObjectParameter("fecInicio", typeof(System.DateTime));
    
            var fecFinParameter = fecFin.HasValue ?
                new ObjectParameter("fecFin", fecFin) :
                new ObjectParameter("fecFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTmRemisionDocumentos_Result>("spTmRemisionDocumentos", fecInicioParameter, fecFinParameter);
        }
    }
}
